function measdata = BPproject(echo, ecg, dataname)
clear;clc;
global data;
% global ContTime;
global kickNumber1;
global kickNumber2;

global Microphone;
global soundOutCuff;

global secondStart;
global handleAudio2;
global cuffPressure;
global cuffPressure_trend;
global id;
global repNum;

global firstKickPressure1;
global secondKickPressure1;
global firstKickPressure2;
global secondKickPressure2;
global removeSample;
global fs;
global color_set;
global max_mp;
global min_mp;
global range_mp;
global NN;
global time;

color_set = [0.2 0.8 0.8];
%% Creat the main figure
hMainFigure = figure('Name', 'Sound Generator', ...
    'NumberTitle', 'off', ...
    'Resize', 'on', ...
    'Units', 'pixel',...
    'HandleVisibility', 'callback',...
    'Position', [100 100 1024 568],...
    'color',color_set);

%% Construct components

hData1Axes = axes(...
    'Parent', hMainFigure,...
    'HandleVisibility', 'callback', ...
    'Units', 'normalized', ...
    'Position', [0.06    0.53    0.65    0.23], ...
    'XLimMode','manual',...
    'XLim', [0, 20], ...
    'XTick', 0:5:80,...
    'NextPlot', 'replacechildren');
ylabel(hData1Axes,'Cuff pressure (mmHg)');

hData2Axes = axes(...
    'Parent', hMainFigure,...
    'HandleVisibility', 'callback', ...
    'Units', 'normalized', ...
    'Position', [0.06    0.445    0.65    0.03], ...
    'XLimMode','manual',...
    'XLim', [0, 100], ...
    'YLim', [0, 1], ...
    'XTick',[],...
    'YTick',[],...
    'color',[0.2 0.8 0.8],....
    'NextPlot', 'replacechildren');

hData3Axes = axes(...
    'Parent', hMainFigure, ...
    'HandleVisibility', 'callback', ...
    'Units', 'normalized', ...
    'Position', [0.06    0.185    0.65    0.23], ...
    'XLimMode','manual',...
    'XLim', [0, 80], ...
    'XTick', 0:5:80);
ylabel(hData3Axes,'Microphone signal (mmHg)');
xlabel(hData3Axes,'Time (s)');

tickTitle = uicontrol(hMainFigure, ...
    'Style', 'text', ...?% can changed text
    'HandleVisibility', 'callback', ...
    'Units', 'normalized',...
    'Position', [0.1    0.94    0.75    0.04], ...
    'String', 'Microphone signal playback system for auscultatory blood pressure measurement',...
    'fontsize',14,...
    'background',[0.2 0.8 0.8]);

tickTitle2 = uicontrol(hMainFigure, ...
    'Style', 'text', ...?% can changed text
    'HandleVisibility', 'callback', ...
    'Units', 'normalized',...
    'Position', [0    0.896    0.9    0.04], ...
    'String', '-----------------------------------------------------------------------------------------------------------------------------------------------------------------------',...
    'fontsize',14,...
    'background',[0.2 0.8 0.8]);

tickTitle3 = uicontrol(hMainFigure, ...
    'Style', 'text', ...?% can changed text
    'HandleVisibility', 'callback', ...
    'Units', 'normalized',...
    'Position', [0.74    0.02    0.008    0.89], ...
    'String', '...........................................................................................................',...
    'fontsize',14,...
    'background',[0.2 0.8 0.8]);

% tickTitle4 = uicontrol(hMainFigure, ...
%     'Style', 'text', ...?% can changed text
%     'HandleVisibility', 'callback', ...
%     'Units', 'normalized',...
%     'Position', [0.75    0.5    0.24    0.04], ...
%     'String', '.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .',...
%     'fontsize',14,...
%     'background',[0.2 0.8 0.8]);

tickSubTitle = uicontrol(hMainFigure, ...
    'Style', 'text', ...?% can changed text
    'HandleVisibility', 'callback', ...
    'Units', 'normalized',...
    'Position', [0.9    0.89    0.1    0.04], ...
    'String', 'EPSRC Project',...
    'fontsize',10,...
    'background',[0.2 0.8 0.8]);

classifyButton = uicontrol(hMainFigure, ...
    'Style', 'pushbutton', ...?% can changed text
    'HandleVisibility', 'callback', ...
    'Units', 'normalized',...
    'Position', [0.75    0.81    0.24    0.08], ...
    'String', '识别结果',...
    'fontangle','normal',...
    'fontweight','bold',...
    'fontsize',18,...
    'background',[0.2 0.6 0.8], ...
    'Callback', @Classify);


% 4)push button
dataLoad = uicontrol(hMainFigure, ...
    'Style', 'pushbutton', ...?% can changed text
    'HandleVisibility', 'callback', ...
    'Units', 'normalized',...
    'Position', [0.07   0.805    0.27    0.08], ...
    'String', 'Load data', ...
    'fontsize',14,...
    'Callback', @DataLoad);

showFile = uicontrol(hMainFigure, ...
    'Style', 'pushbutton', ...?% can changed text
    'HandleVisibility', 'callback', ...
    'Units', 'normalized',...
    'Position', [0.44    0.805    0.27    0.08], ...
    'String', 'Preprocess', ...
    'fontsize',14,...
    'Callback', @Preprocess);

classifierSVM = uicontrol(hMainFigure, ...
    'Style', 'pushbutton', ...?% can changed text
    'HandleVisibility', 'callback', ...
    'Units', 'normalized',...
    'Position', [0.76    0.72    0.06    0.07], ...
    'String', 'SVM', ...
    'fontsize',14);


healthRadioSVM = uicontrol(hMainFigure, ...
    'BackgroundColor', color_set, ...
    'Style', 'radiobutton', ...?% can changed text
    'HandleVisibility', 'callback', ...
    'Units', 'normalized',...
    'Position', [0.85    0.71    0.06    0.1], ...
    'String', '健康',...
    'fontsize',16);

patientRadioSVM = uicontrol(hMainFigure, ...
    'BackgroundColor', color_set, ...
    'Style', 'radiobutton', ...?% can changed text
    'HandleVisibility', 'callback', ...
    'Units', 'normalized',...
    'Position', [0.92    0.71    0.06    0.1], ...
    'String', '抑郁',...
    'fontsize',16);

classifierKNN = uicontrol(hMainFigure, ...
    'Style', 'pushbutton', ...?% can changed text
    'HandleVisibility', 'callback', ...
    'Units', 'normalized',...
    'Position', [0.76    0.58    0.06    0.07], ...
    'String', 'KNN', ...
    'fontsize',14);


healthRadioKNN = uicontrol(hMainFigure, ...
    'BackgroundColor', color_set, ...
    'Style', 'radiobutton', ...?% can changed text
    'HandleVisibility', 'callback', ...
    'Units', 'normalized',...
    'Position', [0.85    0.57    0.06    0.1], ...
    'String', '健康',...
    'fontsize',16);

patientRadioKNN = uicontrol(hMainFigure, ...
    'BackgroundColor', color_set, ...
    'Style', 'radiobutton', ...?% can changed text
    'HandleVisibility', 'callback', ...
    'Units', 'normalized',...
    'Position', [0.92    0.57    0.06    0.1], ...
    'String', '抑郁',...
    'fontsize',16);

classifierRF = uicontrol(hMainFigure, ...
    'Style', 'pushbutton', ...?% can changed text
    'HandleVisibility', 'callback', ...
    'Units', 'normalized',...
    'Position', [0.76    0.44    0.06    0.07], ...
    'String', 'RF', ...
    'fontsize',14);


healthRadioRF = uicontrol(hMainFigure, ...
    'BackgroundColor', color_set, ...
    'Style', 'radiobutton', ...?% can changed text
    'HandleVisibility', 'callback', ...
    'Units', 'normalized',...
    'Position', [0.85    0.43    0.06    0.1], ...
    'String', '健康',...
    'fontsize',16);

patientRadioRF = uicontrol(hMainFigure, ...
    'BackgroundColor', color_set, ...
    'Style', 'radiobutton', ...?% can changed text
    'HandleVisibility', 'callback', ...
    'Units', 'normalized',...
    'Position', [0.92    0.43    0.06    0.1], ...
    'String', '抑郁',...
    'fontsize',16);

% % 1.1) data menu components callback functions
    function DataLoad(hObject, eventdata)
        % load file
        fs = 1000;
        [filename, pathname] = uigetfile('*.mat', 'Pick a csv file');
        path = [pathname filename];
        EEG_Original = load(path);
        EEG_Original = EEG_Original.('MK');
        % display the data in figure
        hold on
        showData = EEG_Original(:, 6);
        showData = showData(1:20001);
        data = EEG_Original;
        t = [0 : 1/fs : (numel(showData)-1)/fs];
        set(hData1Axes,'YLim',[-100, 100]);
        set(hData1Axes,'ytick',[-20, 20]);
        set(hData1Axes,'XLim',[0, t(end)]);
        set(hData1Axes,'xtick',[0, t(end)]);
        set(hData1Axes,'YTick',-100:20:100);
        set(hData1Axes,'XTick',0:1:t(end));
        xlabel(hData1Axes,'Time (s)');
        ylabel(hData1Axes,'Amplitude (\mu v)');
        plot(hData1Axes, t, showData);
        hold on
    end
    function Preprocess(hObject, eventdata)
        disp(size(data, 1));
        Fs = 200;
        EEGProcessed = EEG_Preprocessing(data(:, 6:8));
        showData = EEGProcessed(1:4001, 1);
        t = [0 : 1/Fs : (numel(showData)-1)/Fs];
        set(hData3Axes,'YLim',[-20, 20]);
        set(hData3Axes,'XLim',[0, t(end)]);
        set(hData3Axes,'YTick',-20:5:20);
        set(hData3Axes,'XTick',0:1:t(end));
        xlabel(hData3Axes,'Time (s)');
        ylabel(hData3Axes,'Amplitude (\mu v)');
        plot(hData3Axes, t, showData);
    end
    function Classify(hObject, eventdata)
        Fea = FeatureExtraction(data);
        train_data = load('train_data.mat');
        filedName = fieldnames(train_data);
        filedName = filedName{1};
        train_data = train_data.(filedName);
        data_train = train_data(:,2:10);
        label_train=train_data(:,1);
        data_test=Fea(1,2:10);
        label_test=Fea(1,1);
        model = classRF_train(data_train,label_train);
        [Predict_label(1,1),votes] = classRF_predict(data_test,model);
        if Predict_label(1, 1)==0
            healthRadioRF.Value = true;
            patientRadioRF.Value = false;
        else
            patientRadioRF.Value = true;
            healthRadioRF.Value = false;
        end
        knn = ClassificationKNN.fit(data_train, label_train,'Distance','seuclidean','NumNeighbors',2);%构建knn模型
        [Predict_label(2,1), Scores] = predict(knn,data_test);%预测分类
        if Predict_label(2, 1)==0
            healthRadioKNN.Value = true;
            patientRadioKNN.Value = false;
        else
            patientRadioKNN.Value = true;
            healthRadioKNN.Value = false;
        end
        model = libsvmtrain(label_train,data_train,'-t 2 -c 181 -g 256');
        [Predict_label(3,1),acc,~] = libsvmpredict(label_test,data_test,model);
        if Predict_label(3, 1)==0
            healthRadioSVM.Value = true;
            patientRadioSVM.Value = false;
        else
            patientRadioSVM.Value = true;
            healthRadioSVM.Value = false;
        end
    end
end



